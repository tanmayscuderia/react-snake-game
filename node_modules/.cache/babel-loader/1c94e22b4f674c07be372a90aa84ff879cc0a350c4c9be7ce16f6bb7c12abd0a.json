{"ast":null,"code":"import _slicedToArray from\"/Users/tanmaytiwari/development/game-react-snake/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useRef,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{DIRECTION_LEFT,DIRECTION_RIGHT,DIRECTION_UP,DIRECTION_DOWN,RESET_SCORE,moveSnake,resetGame,stopGame,updateScore,increaseSnake,INCREASE_SCORE}from\"../store/actions\";import'./Board.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var getRandomPosition=function getRandomPosition(position){var randomPosition=Math.random()*position;return randomPosition-randomPosition%20;};var generateRandomPosition=function generateRandomPosition(width,height){return{x:getRandomPosition(width),y:getRandomPosition(height)};};var clearBoard=function clearBoard(context){if(context){context.clearRect(0,0,1000,600);}};var designCharacters=function designCharacters(context,objectBody,fillColor){var strokeStyle=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"#146356\";if(context){objectBody.forEach(function(object){context.fillStyle=fillColor;context.strokeStyle=strokeStyle;context===null||context===void 0?void 0:context.fillRect(object.x,object.y,20,20);context===null||context===void 0?void 0:context.strokeRect(object.x,object.y,20,20);});}};export var hasSnakeCollided=function hasSnakeCollided(snake,currentHeadPos){var flag=false;snake.forEach(function(position,index){if(position.x===currentHeadPos.x&&position.y===currentHeadPos.y&&index!==0){flag=true;}});return flag;};var Board=function Board(_ref){var height=_ref.height,width=_ref.width;var dispatch=useDispatch();var notAllowedDirection=useSelector(function(state){return state.notAllowedDirection;});var snake=useSelector(function(state){return state.snake;});var _useState=useState(generateRandomPosition(width-20,height-20)),_useState2=_slicedToArray(_useState,2),position=_useState2[0],setPosition=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isEaten=_useState4[0],setIsEaten=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),endGame=_useState6[0],setEndGame=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),context=_useState8[0],setContext=_useState8[1];var canvasRef=useRef(null);useEffect(function(){if(isEaten){var randomPosition=generateRandomPosition(width-20,height-20);setPosition(randomPosition);setIsEaten(false);dispatch(increaseSnake());dispatch(updateScore(INCREASE_SCORE));}},[isEaten,position,height,width,dispatch]);var snakeMovement=useCallback(function(){var x=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var ds=arguments.length>2?arguments[2]:undefined;if(x===0&&y<0&&ds!==\"UP\"){dispatch(moveSnake(x,y,DIRECTION_UP));}if(x===0&&y>0&&ds!==\"DOWN\"){dispatch(moveSnake(x,y,DIRECTION_DOWN));}if(x<0&&y===0&&ds!==\"LEFT\"){dispatch(moveSnake(x,y,DIRECTION_LEFT));}if(x>0&&y===0&&ds!==\"RIGHT\"){dispatch(moveSnake(x,y,DIRECTION_RIGHT));}},[dispatch]);var keyMovement=useCallback(function(event){if(notAllowedDirection){console.log('s',event.key);switch(event.key){case\"ArrowUp\":snakeMovement(0,-20,notAllowedDirection);break;case\"ArrowDown\":snakeMovement(0,20,notAllowedDirection);break;case\"ArrowLeft\":snakeMovement(-20,0,notAllowedDirection);break;case\"ArrowRight\":event.preventDefault();snakeMovement(20,0,notAllowedDirection);break;}}else{if(notAllowedDirection!==\"LEFT\"&&notAllowedDirection!==\"UP\"&&notAllowedDirection!==\"DOWN\"&&event.key===\"s\")snakeMovement(20,0,notAllowedDirection);}},[notAllowedDirection,snakeMovement]);useEffect(function(){window.addEventListener(\"keydown\",keyMovement);return function(){window.removeEventListener(\"keydown\",keyMovement);};},[notAllowedDirection,keyMovement]);var resetBoard=useCallback(function(){window.removeEventListener(\"keydown\",keyMovement);dispatch(resetGame());dispatch(updateScore(RESET_SCORE));clearBoard(context);designCharacters(context,snake,\"#91C483\");designCharacters(context,[generateRandomPosition(width-20,height-20)],\"#676FA3\");window.addEventListener(\"keydown\",keyMovement);},[context,dispatch,keyMovement,height,snake,width]);useEffect(function(){setContext(canvasRef.current&&canvasRef.current.getContext(\"2d\"));clearBoard(context);designCharacters(context,snake,\"#91C483\");designCharacters(context,[position],\"#676FA3\");if(snake[0].x===(position===null||position===void 0?void 0:position.x)&&snake[0].y===(position===null||position===void 0?void 0:position.y)){setIsEaten(true);}if(hasSnakeCollided(snake,snake[0])||snake[0].x>=width||snake[0].x<=0||snake[0].y<=0||snake[0].y>=height){setEndGame(true);dispatch(stopGame());window.removeEventListener(\"keydown\",keyMovement);}else setEndGame(false);},[context,position,snake,height,width,dispatch,keyMovement]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"canvas\",{className:\"canvas-container\",ref:canvasRef,width:width,height:height})});};export default Board;","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","useDispatch","useSelector","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","RESET_SCORE","moveSnake","resetGame","stopGame","updateScore","increaseSnake","INCREASE_SCORE","jsx","_jsx","Fragment","_Fragment","getRandomPosition","position","randomPosition","Math","random","generateRandomPosition","width","height","x","y","clearBoard","context","clearRect","designCharacters","objectBody","fillColor","strokeStyle","arguments","length","undefined","forEach","object","fillStyle","fillRect","strokeRect","hasSnakeCollided","snake","currentHeadPos","flag","index","Board","_ref","dispatch","notAllowedDirection","state","_useState","_useState2","_slicedToArray","setPosition","_useState3","_useState4","isEaten","setIsEaten","_useState5","_useState6","endGame","setEndGame","_useState7","_useState8","setContext","canvasRef","snakeMovement","ds","keyMovement","event","console","log","key","preventDefault","window","addEventListener","removeEventListener","resetBoard","current","getContext","children","className","ref"],"sources":["/Users/tanmaytiwari/development/game-react-snake/src/components/Board.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { State } from '../store/reducers';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP, DIRECTION_DOWN, RESET_SCORE, moveSnake, resetGame, stopGame, updateScore, Coordinates, increaseSnake, INCREASE_SCORE } from \"../store/actions\";\nimport './Board.css';\n\nconst getRandomPosition = (position: number) => {\n    const randomPosition = Math.random() * position;\n    return randomPosition - (randomPosition % 20);\n}\n\nconst generateRandomPosition = (width: number, height: number) => {\n    return {\n        x: getRandomPosition(width),\n        y: getRandomPosition(height),\n    };\n};\n\nconst clearBoard = (context: CanvasRenderingContext2D | null) => {\n    if (context) {\n        context.clearRect(0, 0, 1000, 600);\n    }\n};\n\nconst designCharacters = (\n    context: CanvasRenderingContext2D | null,\n    objectBody: Coordinates[],\n    fillColor: string,\n    strokeStyle = \"#146356\"\n) => {\n    if (context) {\n        objectBody.forEach((object: Coordinates) => {\n            context.fillStyle = fillColor;\n            context.strokeStyle = strokeStyle;\n            context?.fillRect(object.x, object.y, 20, 20);\n            context?.strokeRect(object.x, object.y, 20, 20);\n        });\n    }\n};\n\nexport const hasSnakeCollided = (\n    snake: Coordinates[],\n    currentHeadPos: Coordinates\n) => {\n    let flag = false;\n    snake.forEach((position: Coordinates, index: number) => {\n        if (\n            position.x === currentHeadPos.x &&\n            position.y === currentHeadPos.y &&\n            index !== 0\n        ) {\n            flag = true;\n        }\n    });\n\n    return flag;\n};\n\nconst Board = ({ height, width }: CanvasScreen) => {\n    const dispatch = useDispatch();\n    const notAllowedDirection = useSelector((state: State) => state.notAllowedDirection);\n    const snake = useSelector((state: State) => state.snake);\n    const [position, setPosition] = useState<Coordinates>(generateRandomPosition(width - 20, height - 20));\n    const [isEaten, setIsEaten] = useState<boolean>(false);\n    const [endGame, setEndGame] = useState<boolean>(false);\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n    useEffect(() => {\n        if (isEaten) {\n            const randomPosition = generateRandomPosition(width - 20, height - 20);\n            setPosition(randomPosition);\n            setIsEaten(false);\n            dispatch(increaseSnake());\n            dispatch(updateScore(INCREASE_SCORE));\n        }\n    }, [isEaten, position, height, width, dispatch]);\n\n\n    const snakeMovement = useCallback(\n        (x = 0, y = 0, ds: string) => {\n            if (x === 0 && y < 0 && ds !== \"UP\") {\n                dispatch(moveSnake(x, y, DIRECTION_UP));\n            }\n\n            if (x === 0 && y > 0 && ds !== \"DOWN\") {\n                dispatch(moveSnake(x, y, DIRECTION_DOWN));\n            }\n\n            if (x < 0 && y === 0 && ds !== \"LEFT\") {\n                dispatch(moveSnake(x, y, DIRECTION_LEFT));\n            }\n\n            if (x > 0 && y === 0 && ds !== \"RIGHT\") {\n                dispatch(moveSnake(x, y, DIRECTION_RIGHT));\n            }\n        },\n        [dispatch]\n    );\n\n    const keyMovement = useCallback(\n        (event: KeyboardEvent) => {\n            if (notAllowedDirection) {\n                console.log('s', event.key);\n                    \n                switch (event.key) {\n                    case \"ArrowUp\":\n                        snakeMovement(0, -20, notAllowedDirection);\n                        break;\n                    case \"ArrowDown\":\n                        snakeMovement(0, 20, notAllowedDirection);\n                        break;\n                    case \"ArrowLeft\":\n                        snakeMovement(-20, 0, notAllowedDirection);\n                        break;\n                    case \"ArrowRight\":\n                        event.preventDefault();\n                        snakeMovement(20, 0, notAllowedDirection);\n                        break;\n                }\n            } else {\n                if (\n                    notAllowedDirection !== \"LEFT\" &&\n                    notAllowedDirection !== \"UP\" &&\n                    notAllowedDirection !== \"DOWN\" &&\n                    event.key === \"s\"\n                )\n                    snakeMovement(20, 0, notAllowedDirection);\n            }\n        },\n        [notAllowedDirection, snakeMovement]\n    );\n\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", keyMovement);\n\n        return () => {\n            window.removeEventListener(\"keydown\", keyMovement);\n        };\n    }, [notAllowedDirection, keyMovement]);\n\n    const resetBoard = useCallback(() => {\n        window.removeEventListener(\"keydown\", keyMovement);\n        dispatch(resetGame());\n        dispatch(updateScore(RESET_SCORE));\n        clearBoard(context);\n        designCharacters(context, snake, \"#91C483\");\n        designCharacters(\n            context,\n            [generateRandomPosition(width - 20, height - 20)],\n            \"#676FA3\"\n        );\n        window.addEventListener(\"keydown\", keyMovement);\n    }, [context, dispatch, keyMovement, height, snake, width]);\n\n    useEffect(() => {\n        setContext(canvasRef.current && canvasRef.current.getContext(\"2d\"));\n        clearBoard(context);\n        designCharacters(context, snake, \"#91C483\");\n        designCharacters(context, [position], \"#676FA3\");\n\n        if (snake[0].x === position?.x && snake[0].y === position?.y) {\n            setIsEaten(true);\n        }\n\n        if (\n            hasSnakeCollided(snake, snake[0]) ||\n            snake[0].x >= width ||\n            snake[0].x <= 0 ||\n            snake[0].y <= 0 ||\n            snake[0].y >= height\n        ) {\n            setEndGame(true);\n            dispatch(stopGame());\n            window.removeEventListener(\"keydown\", keyMovement);\n        } else setEndGame(false);\n    }, [context, position, snake, height, width, dispatch, keyMovement]);\n\n\n    return (\n        <>\n            <canvas\n                className=\"canvas-container\"\n                ref={canvasRef}\n                width={width}\n                height={height}\n            />\n            {/* <Instruction resetBoard={resetBoard} /> */}\n        </>\n    );\n};\n\nexport default Board;\n\nexport interface CanvasScreen {\n    width: number;\n    height: number;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
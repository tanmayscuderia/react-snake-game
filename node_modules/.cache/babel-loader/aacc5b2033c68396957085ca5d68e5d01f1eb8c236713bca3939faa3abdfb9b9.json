{"ast":null,"code":"import { UP, DOWN, RIGHT, LEFT, RESET, INCREASE_SIZE, INCREASE_SCORE, SET_DIRECTION, RESET_SCORE } from '../actions';\nconst appState = {\n  notAllowedDirection: \"\",\n  score: 0,\n  snake: [{\n    x: 580,\n    y: 300\n  }, {\n    x: 560,\n    y: 300\n  }, {\n    x: 540,\n    y: 300\n  }, {\n    x: 520,\n    y: 300\n  }, {\n    x: 500,\n    y: 300\n  }]\n};\nconst reducer = (state = appState, actions) => {\n  switch (actions.type) {\n    case SET_DIRECTION:\n      console.log('d', actions.direction);\n      return {\n        ...state,\n        notAllowedDirection: actions.direction\n      };\n    case INCREASE_SIZE:\n      const currentLength = state.snake.length;\n      return {\n        ...state,\n        snake: [...state.snake, {\n          x: state.snake[currentLength - 1].x - 20,\n          y: state.snake[currentLength - 1].y - 20\n        }]\n      };\n    case INCREASE_SCORE:\n      return {\n        ...state,\n        score: state.score + 1\n      };\n    case RESET_SCORE:\n      return {\n        ...state,\n        score: 0\n      };\n    case RESET:\n      return {\n        ...state,\n        snake: [{\n          x: 580,\n          y: 300\n        }, {\n          x: 560,\n          y: 300\n        }, {\n          x: 540,\n          y: 300\n        }, {\n          x: 520,\n          y: 300\n        }, {\n          x: 500,\n          y: 300\n        }],\n        notAllowedDirection: \"\"\n      };\n    case UP:\n    case DOWN:\n    case RIGHT:\n    case LEFT:\n      {\n        let modifiedSnake = [...state.snake];\n        modifiedSnake = [{\n          x: state.snake[0].x + actions.payload[0],\n          y: state.snake[0].y + actions.payload[1]\n        }, ...modifiedSnake];\n        modifiedSnake.pop();\n        return {\n          ...state,\n          snake: modifiedSnake\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["UP","DOWN","RIGHT","LEFT","RESET","INCREASE_SIZE","INCREASE_SCORE","SET_DIRECTION","RESET_SCORE","appState","notAllowedDirection","score","snake","x","y","reducer","state","actions","type","console","log","direction","currentLength","length","modifiedSnake","payload","pop"],"sources":["/Users/tanmaytiwari/development/game-react-snake/src/store/reducers/index.ts"],"sourcesContent":["import { UP, DOWN, RIGHT, LEFT, RESET, INCREASE_SIZE, INCREASE_SCORE, SET_DIRECTION, Coordinates, RESET_SCORE } from '../actions';\n\nconst appState: State = {\n    notAllowedDirection: \"\",\n    score: 0,\n    snake: [\n        { x: 580, y: 300 },\n        { x: 560, y: 300 },\n        { x: 540, y: 300 },\n        { x: 520, y: 300 },\n        { x: 500, y: 300 },\n    ],\n\n}\n\nconst reducer = (state = appState, actions: any) => {\n    switch (actions.type) {\n        case SET_DIRECTION:\n            console.log('d', actions.direction);\n            return { ...state, notAllowedDirection: actions.direction };\n\n        case INCREASE_SIZE:\n            const currentLength = state.snake.length;\n\n            return {\n                ...state,\n                snake: [\n                    ...state.snake,\n                    {\n                        x: state.snake[currentLength - 1].x - 20,\n                        y: state.snake[currentLength - 1].y - 20\n                    },\n                ],\n            };\n\n        case INCREASE_SCORE:\n            return { ...state, score: state.score + 1 };\n\n        case RESET_SCORE:\n            return { ...state, score: 0 };\n\n        case RESET:\n            return {\n                ...state,\n                snake: [\n                    { x: 580, y: 300 },\n                    { x: 560, y: 300 },\n                    { x: 540, y: 300 },\n                    { x: 520, y: 300 },\n                    { x: 500, y: 300 },\n                ],\n                notAllowedDirection: \"\"\n            };\n\n        case UP:\n        case DOWN:\n        case RIGHT:\n        case LEFT: {\n            let modifiedSnake = [...state.snake];\n            modifiedSnake = [{\n                x: state.snake[0].x + actions.payload[0],\n                y: state.snake[0].y + actions.payload[1],\n            }, ...modifiedSnake];\n            modifiedSnake.pop();\n\n            return {\n                ...state,\n                snake: modifiedSnake,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n\nexport interface State {\n    score: number;\n    notAllowedDirection: string;\n    snake: Coordinates[] | [];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}